#+STARTUP: hideall inlineimages hideblocks
#+PROPERTY: header-args:R :session quant :eval never-export
#+HTML_HEAD: <style>#content{max-width:1200px;} </style>

* Title slide                                        :slide:

#+BEGIN_SRC emacs-lisp-slide
(org-show-animate '("Quantitative Methods, Part-II" "Introduction to Statistical Inference" "Vikas Rawal" "" "" ""))
#+END_SRC

* Sampling Distributions

** `Sampling Distributions of Sample Mean           :slide:

#+RESULTS: sampling2
[[file:bsample2.png]]


#+NAME: sampling2
#+BEGIN_SRC R :results file graphics :exports results :file bsample2.png :width 1200 :height 800  :res 200
  library(data.table)
  readRDS("plfsacjdata.rds")->worker
  worker$standardwage->worker$wage
  c(1:nrow(worker))->worker$SamplingFrameOrder
  worker[sex!=3,]->worker
  library(ggplot2)
  ggplot(worker,aes(wage))+geom_density(colour="black",size=1)+scale_y_continuous(limits=c(0,0.05))+scale_x_continuous(limits=c(0,600),breaks=c(0,mean(worker$wage),1000))->p

  #ggplot(worker,aes(wage))+geom_density(colour="black",size=1)+scale_y_continuous(limits=c(0,0.05))+scale_x_continuous(limits=c(0,600),breaks=c(0,mean(worker$wage),1000))->p
  #    p+facet_wrap(~sex)->p
  p+annotate("text",x=380,y=0.045,size=6,
             label=paste("Population mean = ",round(mean(worker$wage)),sep=""))->p
  p+annotate("text",x=400,y=0.042,size=6,
             label="Distribution of sample means:")->p
  p+theme_bw()->p
  p



  sample(1:nrow(worker),5, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t1
  for (i in c(1:9999)) {
    sample(1:nrow(worker),5, replace=FALSE)->a1
    worker[a1,]->s1
    c(t1,mean(s1$wage))->t1
  }

  data.frame(sno=c(1:10000),meancol=t1)->t1
  p+geom_density(data=t1,aes(meancol),colour="blue",size=1)-> p
  paste("Sample size 5: mean = ",
        round(mean(t1$meancol)),
        "; stdev = ",
        round(sd(t1$meancol)),sep="")->lab
  p+annotate("text",x=450,y=0.030,label=lab,colour="blue",size=6)->p
  p

  sample(1:nrow(worker),20, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t0
  for (i in c(1:9999)) {
    sample(1:nrow(worker),20, replace=FALSE)->a1
    worker[a1,]->s1
    c(t0,mean(s1$wage))->t0
  }

  data.frame(sno=c(1:10000),meancol=t0)->t0
  p+geom_density(data=t0,aes(meancol),colour="darkolivegreen",size=1)-> p
  paste("Sample size 20: mean = ",
        round(mean(t0$meancol)),
        "; stdev = ",
        round(sd(t0$meancol)),sep="")->lab
  p+annotate("text",x=450,y=0.033,label=lab,size=6,colour="darkolivegreen")->p
  p

  sample(1:nrow(worker),50, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t
  for (i in c(1:9999)) {
    sample(1:nrow(worker),50, replace=FALSE)->a1
    worker[a1,]->s1
    c(t,mean(s1$wage))->t
  }

  data.frame(sno=c(1:10000),meancol=t)->t
  p+geom_density(data=t,aes(meancol),colour="red",size=1)-> p
  paste("Sample size 50: mean = ",
        round(mean(t$meancol)),
        "; stdev = ",
        round(sd(t$meancol)),sep="")->lab
  p+annotate("text",x=450,y=0.036,label=lab,size=6,colour="red")->p
  p

  sample(1:nrow(worker),200, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t4
  for (i in c(1:9999)) {
    sample(1:nrow(worker),200, replace=FALSE)->a1
    worker[a1,]->s1
    c(t4,mean(s1$wage))->t4
  }

  data.frame(sno=c(1:10000),meancol=t4)->t4
  p+geom_density(data=t4,aes(meancol),colour="pink",size=1)-> p
  paste("Sample size 200: mean = ",
        round(mean(t4$meancol)),
        "; stdev = ",
        round(sd(t4$meancol)),sep="")->lab
  p+annotate("text",x=450,y=0.039,label=lab,size=6,colour="pink")->p
  p
#+end_src

** Sampling Distributions of Sample Median          :slide:

#+RESULTS: sampling-median
[[file:bsample2.png]]


#+NAME: sampling-median
#+BEGIN_SRC R :results file graphics :exports results :file bsamplemedian.png :width 1200 :height 800  :res 200
  library(data.table)
    readRDS("plfsacjdata.rds")->worker

  ## library(distributions3)
  ## set.seed(27)
  ## X <- LogNormal(0, 1)
  ## random(X, 100000)->t
  ## data.frame(wage=t)->worker
    worker$standardwage->worker$wage
    c(1:nrow(worker))->worker$SamplingFrameOrder
    worker[sex!=3,]->worker
  library(ggplot2)
  ggplot(worker,aes(wage))+geom_density(colour="black",size=1)+scale_y_continuous(limits=c(0,0.05))+scale_x_continuous(limits=c(0,600),breaks=c(0,mean(worker$wage),1000))->p

  p+annotate("text",x=380,y=0.045,size=6,
             label=paste("Population mean = ",round(mean(worker$wage)),sep=""))->p
  p+annotate("text",x=400,y=0.042,size=6,
             label="Distribution of sample medians:")->p
  p+theme_bw()->p
  p


  sample(1:nrow(worker),5, replace=FALSE)->a1
  worker[a1,]->s1
  median(s1$wage)->t1
  for (i in c(1:9999)) {
    sample(1:nrow(worker),5, replace=FALSE)->a1
    worker[a1,]->s1
    c(t1,median(s1$wage))->t1
  }

  data.frame(sno=c(1:10000),mediancol=t1)->t1
  p+geom_density(data=t1,aes(mediancol),colour="blue",size=1)-> p
  paste("Sample size 5: mean = ",
        round(mean(t1$mediancol)),
        "; stdev = ",
        round(sd(t1$mediancol)),sep="")->lab
  p+annotate("text",x=450,y=0.030,label=lab,colour="blue",size=6)->p
  p
  3
  sample(1:nrow(worker),20, replace=FALSE)->a1
  worker[a1,]->s1
  median(s1$wage)->t0
  for (i in c(1:9999)) {
    sample(1:nrow(worker),20, replace=FALSE)->a1
    worker[a1,]->s1
    c(t0,median(s1$wage))->t0
  }

  data.frame(sno=c(1:10000),mediancol=t0)->t0
  p+geom_density(data=t0,aes(mediancol),colour="darkolivegreen",size=1)-> p
  paste("Sample size 20: mean = ",
        round(mean(t0$mediancol)),
        "; stdev = ",
        round(sd(t0$mediancol)),sep="")->lab
  p+annotate("text",x=450,y=0.033,label=lab,size=6,colour="darkolivegreen")->p
  p

  sample(1:nrow(worker),50, replace=FALSE)->a1
  worker[a1,]->s1
  median(s1$wage)->t
  for (i in c(1:9999)) {
    sample(1:nrow(worker),50, replace=FALSE)->a1
    worker[a1,]->s1
    c(t,median(s1$wage))->t
  }

  data.frame(sno=c(1:10000),mediancol=t)->t
  p+geom_density(data=t,aes(mediancol),colour="red",size=1)-> p
  paste("Sample size 50: mean = ",
        round(mean(t$mediancol)),
        "; stdev = ",
        round(sd(t$mediancol)),sep="")->lab
  p+annotate("text",x=450,y=0.036,label=lab,size=6,colour="red")->p
  p

  sample(1:nrow(worker),200, replace=FALSE)->a1
  worker[a1,]->s1
  median(s1$wage)->t4
  for (i in c(1:9999)) {
    sample(1:nrow(worker),200, replace=FALSE)->a1
    worker[a1,]->s1
    c(t4,median(s1$wage))->t4
  }

  data.frame(sno=c(1:10000),mediancol=t4)->t4
  p+geom_density(data=t4,aes(mediancol),colour="pink",size=1)-> p
  paste("Sample size 200: mean = ",
        round(mean(t4$mediancol)),
        "; stdev = ",
        round(sd(t4$mediancol)),sep="")->lab
  p+annotate("text",x=450,y=0.039,label=lab,size=6,colour="pink")->p
  p
#+end_src


** Sampling Distributions                           :slide:

+ $Standard.error = \frac{\sigma}{\sqrt{n}}$

|                           Variable | Value |
|------------------------------------+-------|
|   Standard deviation of population |   130 |
| Standard errors of samples of size |       |
|                                  5 |    58 |
|                                 20 |    29 |
|                                 50 |    18 |
|                                200 |     9 |


** Sampling and Choice of Statistic

|           | Settlement A | Settlement B          | Total |
|-----------+--------------+-----------------------+-------|
| ACJPuram  | 9000         | 1000                  | 10000 |
| Sample-I  | 180          | 20                    |   200 |
|           | (2%)         | (2%)                  |    2% |
| Sample-II | 100          | 100                   |   200 |
|           | 1/90         | 1/10                  |    2% |
|           | Huts         | Fancy concrete houses | Total |













* Introduction to Hypothesis Testing
** Transforming the Distribution to Standard Normal :slide:

$Z=\frac{x_{i}-\mu}{\sigma}$

#+attr_org: :width 1200px
#+RESULTS: sampling3
[[file:bsample3.png]]

#+NAME: sampling3
#+BEGIN_SRC R :results file graphics :exports results :file bsample3.png :width 1200 :height 800  :res 200
  library(data.table)
  readRDS("plfsdata/plfsacjdata.rds")->worker
  worker$standardwage->worker$wage
  c(1:nrow(worker))->worker$SamplingFrameOrder
  worker[sex!=3,]->worker
  library(ggplot2)

  worker->t9
  (t9$wage-mean(t9$wage))/sd(t9$wage)->t9$wage
  ggplot(t9,aes(wage))+geom_density(colour="black",size=1)->p
  p+scale_y_continuous(limits=c(0,0.75))->p
  p+scale_x_continuous(limits=c(-15,15),
                       breaks=c(-5,0,mean(worker$wage),10,15))->p
  p+theme_bw()->p
  p



  sample(1:nrow(worker),5, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t1
    for (i in c(1:9999)) {
        sample(1:nrow(worker),5, replace=FALSE)->a1
        worker[a1,]->s1
        c(t1,mean(s1$wage))->t1
    }

  data.frame(sno=c(1:10000),meancol=(t1-mean(worker$wage))/sd(t1))->t1
  p+geom_density(data=t1,aes(meancol),colour="blue",size=1)-> p
  p

  sample(1:nrow(worker),20, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t0
  for (i in c(1:9999)) {
    sample(1:nrow(worker),20, replace=FALSE)->a1
    worker[a1,]->s1
    c(t0,mean(s1$wage))->t0
  }

  data.frame(sno=c(1:10000),meancol=(t0-mean(worker$wage))/sd(t0))->t0
  p+geom_density(data=t0,aes(meancol),colour="darkolivegreen",size=1)-> p
  p

  sample(1:nrow(worker),50, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t
  for (i in c(1:9999)) {
    sample(1:nrow(worker),50, replace=FALSE)->a1
    worker[a1,]->s1
    c(t,mean(s1$wage))->t
  }

  data.frame(sno=c(1:10000),meancol=(t-mean(worker$wage))/sd(t))->t
  p+geom_density(data=t,aes(meancol),colour="red",size=1)-> p
  p

  sample(1:nrow(worker),200, replace=FALSE)->a1
  worker[a1,]->s1
  mean(s1$wage)->t4
  for (i in c(1:9999)) {
    sample(1:nrow(worker),200, replace=FALSE)->a1
    worker[a1,]->s1
    c(t4,mean(s1$wage))->t4
  }

  data.frame(sno=c(1:10000),meancol=(t4-mean(worker$wage))/sd(t4))->t4
  p+geom_density(data=t4,aes(meancol),colour="pink",size=0.3)-> p
  p
#+end_src


** Distribution of sample mean with unknown population variance :slide:

#+attr_org: :width 1200px
#+attr_html: :width 1200px
#+RESULTS: sampling5
[[file:bsample5.png]]

#+NAME: sampling5
#+BEGIN_SRC R :results file graphics :exports results :file bsample5.png :width 1200 :height 800  :res 200
  library(data.table)
  library(ggplot2)
  options(scipen=9999)
  readRDS("plfsdata/plfsacjdata.rds")->worker
  worker$standardwage->worker$wage
  c(1:nrow(worker))->worker$SamplingFrameOrder
  worker[sex!=3,]->worker

  worker->t9
  (t9$wage-mean(t9$wage))/sd(t9$wage)->t9$wage
  ggplot(t9,aes(wage))+geom_density(colour="black",size=1)->p
  p+scale_y_continuous(limits=c(0,0.75))->p
  p+scale_x_continuous(limits=c(-15,15)
                      ,breaks=c(-15,0,round(mean(worker$wage)),15))->p
  p+theme_bw()->p
  p

  data.frame(sno=c(),meancol=c(),sterr=c())->t4
  samplesize=5
  for (i in c(1:20000)) {
    sample(1:nrow(worker),samplesize, replace=FALSE)->a1
    t9[a1,]->s1
    rbind(t4,data.frame(
               sno=i,
               meancol=mean(s1$wage),
               sterr=sd(s1$wage)/sqrt(samplesize)
             )
          )->t4
  }

  (t4$meancol)/t4$sterr->t4$teststat
  (t4$meancol)/sd(t4$meancol)->t4$teststat2
  data.frame(modelt=rt(200000,samplesize-1,ncp=mean(t4$teststat)),
             modelnorm=rnorm(200000,mean=mean(t4$teststat2)))->m

  sd(t4$teststat)
  sd(m$modelt)
  sd(m$modelnorm)
  sd(t4$teststat2)
  mean(t4$teststat)
  mean(m$modelt)
  mean(m$modelnorm)
  mean(t4$teststat2)

  ggplot()->p
  p+geom_density(data=t4,aes(teststat2),colour="red",size=1)-> p
  p+geom_density(data=m,aes(modelnorm),colour="black",size=1)->p
  p+geom_density(data=t4,aes(teststat),colour="blue",size=1)-> p
  p+geom_density(data=m,aes(modelt),colour="darkolivegreen",size=1)->p
  ## p+annotate("text",x=-30,y=0.42,size=2,
  ##            label=paste("Normal distribution, with standard deviation",round(sd(m$modelnorm),2)),
  ##            colour="black",hjust=0)->p
  ## p+annotate("text",x=-30,y=0.40,size=2,
  ##            label=paste("Statistic with known population variance, standard error =",
  ##                        round(sd(t4$teststat2),2)),
  ##            colour="red",hjust=0)->p
  ## p+annotate("text",x=-30,y=0.38,size=2,
  ##            label=paste("t distribution, with standard deviation =",round(sd(m$modelt),2)),
  ##            colour="darkolivegreen",hjust=0)->p
  ## p+annotate("text",x=-30,y=0.36,size=2,
  ##            label=paste("Statistic with unknown population variance, standard error =",
  ##                        round(sd(t4$teststat),2)),
  ##            colour="blue",hjust=0)->p
  p+scale_x_continuous(limits=c(-30,30))+theme_bw()->p
  p
#+end_src


#+NAME: sampling5
#+BEGIN_SRC R :results file graphics :exports results :file bsample5.png :width 1200 :height 800  :res 200
  library(data.table)
  library(ggplot2)
  options(scipen=9999)
  readRDS("plfsdata/plfsacjdata.rds")->worker
  worker$standardwage->worker$wage
  c(1:nrow(worker))->worker$SamplingFrameOrder
  worker[sex!=3,]->worker

  worker->t9
  (t9$wage-mean(t9$wage))/sd(t9$wage)->t9$wage
  ggplot(t9,aes(wage))+geom_density(colour="black",size=1)->p
  p+scale_y_continuous(limits=c(0,0.75))->p
  p+scale_x_continuous(limits=c(-15,15)
                      ,breaks=c(-15,0,round(mean(worker$wage)),15))->p
  p+theme_bw()->p
  p

  data.frame(sno=c(),meancol=c(),sterr=c())->t4
  samplesize=50
  for (i in c(1:20000)) {
    sample(1:nrow(worker),samplesize, replace=FALSE)->a1
    worker[a1,]->s1
    rbind(t4,data.frame(
               sno=i,
               meancol=mean(s1$wage),
               sterr=sd(s1$wage)/sqrt(samplesize)
             )
          )->t4
  }

  (t4$meancol)/t4$sterr->t4$teststat
  (t4$meancol)/sd(t4$meancol)->t4$teststat2
  data.frame(modelt=rt(200000,samplesize-1,ncp=mean(t4$teststat)),
             modelnorm=rnorm(200000,mean=mean(t4$teststat2)))->m

  sd(t4$teststat)
  sd(m$modelt)
  sd(m$modelnorm)
  sd(t4$teststat2)
  mean(t4$teststat)
  mean(m$modelt)
  mean(m$modelnorm)
  mean(t4$teststat2)

  ggplot()->p
  p+geom_density(data=t4,aes(teststat2),colour="red",size=1)-> p
  p+geom_density(data=m,aes(modelnorm),colour="black",size=1)->p
  p+geom_density(data=t4,aes(teststat),colour="blue",size=1)-> p
  p+geom_density(data=m,aes(modelt),colour="darkolivegreen",size=1)->p
  p+annotate("text",x=-30,y=0.42,size=2,
             label=paste("Normal distribution, with standard deviation",round(sd(m$modelnorm),2)),
             colour="black",hjust=0)->p
  p+annotate("text",x=-30,y=0.40,size=2,
             label=paste("Statistic with known population variance, standard error =",
                         round(sd(t4$teststat2),2)),
             colour="red",hjust=0)->p
  p+annotate("text",x=-30,y=0.38,size=2,
             label=paste("t distribution, with standard deviation =",round(sd(m$modelt),2)),
             colour="darkolivegreen",hjust=0)->p
  p+annotate("text",x=-30,y=0.36,size=2,
             label=paste("Statistic with unknown population variance, standard error =",
                         round(sd(t4$teststat),2)),
             colour="blue",hjust=0)->p
  p+scale_x_continuous(limits=c(-30,30))+theme_bw()->p
  p
#+end_src


** Finding an appropriate statistic

*** Chi-square ($\chi^{2}$) distribution

+ $\chi^{2}$ distribution with k degrees of freedom is the distribution of a sum of the squares of k independent standard normal random variables.

  + if $X$ is normally distributed with mean $\mu$ and variance ${\displaystyle \sigma^{2}}$, then:

     $V=(\frac{X - \mu}{\sigma})^{2}=Z^{2}$

    is distributed as a $\chi^{2}$ distribution with 1 degree of freedom.

  + The degrees of freedom in the  $\chi^{2}$ distribution are equal to the number of standard normal random variables being squared and summed. So, the degrees of freedom increase as the sample size increases.

  + Properties
    + It is a right-skewed distribution.
    + Its mean is equal to the degrees of freedom, and its variance is equal to twice the degrees of freedom.
    + It is defined only for non-negative values.

*** Student's-t distribution
+ William Gosset's 1908 Biometrika paper written with a pseudonym Student.

+ t-distribution with df degrees of freedom
  + If $Z \sim N(0,1)$ and $U \sim \chi^{2}_{df}$ are independent then the ratio

    $\frac{Z}{\sqrt{\frac{U}{df}}} \sim t_{df}$

+ Properties:
  + It is a bell-shaped distribution that is symmetric around 0.
  + Its mean is equal to 0, and its variance is equal to df/(df-2) for df > 2.
  + It has heavier tails than the normal distribution.
  + For $df=1$, it is a standard Cauchy distribution
  + For $df \rightarrow \infty, \thickmuskip t_{df} \rightarrow N(0,1)$


** The idea of statistical significance             :slide:

*** Key components                                 :slide:

+ Priors/Assumptions
+ Hypotheses
+ Test statistic
+ p-value
+ Inference

*** Priors/Assumptions                             :slide:

+ Scale: discrete/quantitative
+ Use of randomisation in generating data
+ Population distribution
  + Various assumptions may have to be made, usually on the basis of prior information or the sample data, about the underlying population distribution
  + For example, about the population variance
+ Sample size

*** The null and the alternative hypotheses        :slide:

+ Null hypothesis ($H_{0}$) :: Statement that the parameter takes a particular value. Usually to capture no effect or no difference.
+ Alternative hypothesis ($H_{a}$) :: Statement that the parameter does not take this value.
+ For example
  + For population mean taking a particular value ($\mu_{0}$)
    + H_{0} :: $\mu = \mu_{0}$
    + H_{a} :: $\mu \ne \mu_{0}$
  + For the difference of population means of two groups (say, men and women) being equal to a particular value ($\mu_{0}$)
    + H_{0} :: $\mu_{a} - \mu_{b} = \mu_{0}$
    + H_{a} :: $\mu_{a} - \mu_{b} \ne \mu_{0}$
  + For population mean taking a value higher than a particular value ($\mu_{0}$)
    + H_{0} :: $\mu > \mu_{0}$
    + H_{a} :: $\mu \ngtr \mu_{0}$

*** Test statistic                                 :slide:

+ The difference between the estimate of the test statistic and the parameter value in $H_{0}$ in terms of number of standard error units.

+ For example
  + For testing that population mean takes a particular value ($\mu_{0}$)

    $t=\frac{\bar{y}-\mu{0}}{\frac{s}{\sqrt{n}}}$

  + For the population means of two groups (say, men and women) being equal

    $t=\frac{\bar{y_{a}}-\bar{y_{b}}}{\frac{s}{\sqrt{n}}}$

*** p-value                                        :slide:

+ We construct the distribution of the test statistic assuming that $H_{0}$ is true.
+ Given the probability distribution, we find out the probability that the test statistic may take the estimated value.
+ This is the p-value.
+ It gives us the probability that the test statistic equals the observed value or a value even more extreme (in the direction predicted by $H_{a}$).
+ The smaller the p-value, stronger is the evidence against $H_{0}$.
+ Essentially, we are saying that the data are very unusual if $H_{0}$ is true.
+ The probability at which we reject $H_{0}$ (usually 0.05 or less) is called the $\alpha-level$ of the test.

*** Type I and Type II errors                      :slide:

|              | Reject $H_{0}$     |     Do not reject $H_{0}$ |
|--------------+----------------+-----------------------|
| $H_{0}$ is true  | Type I Error   |                       |
| $H_{0}$ is false |                | Type II Error         |

+  $\alpha-level$ is the probability of Type I error.

*** Chasing the p-values                           :slide:

+ $H_{0}$ may tell a story
+ Even if $H_{0}$ is rejected, the effect may be small


** T Test for means                                 :slide:

***  Testing if the mean is different from a specified value (say zero) :slide:

$H_{0}: \mu = 0$

$H_{a}: \mu \neq 0$

#+name: ttest1
#+begin_src R :results output list org
  readRDS("plfsdata/plfsacjdata.rds")->worker
  worker$standardwage->worker$wage
  worker->t9
  t.test(t9$wage)
#+end_src

#+RESULTS: ttest1
#+begin_src org
- One Sample t-test
- data:  t9$wage
- t = 432.99, df = 37634, p-value < 0.00000000000000022
- alternative hypothesis: true mean is not equal to 0
- 95 percent confidence interval:
- 289.7136 292.3484
- sample estimates:
- mean of x
- 291.031
#+end_src


*** Testing equality of means                      :slide:


$H_{0}: \mu_{women} = \mu_{men}$

$H_{a}: \mu_{women} \neq \mu_{men}$


#+name: ttest2
#+begin_src R :results output list org
  subset(worker,sex!=3)->t9
  factor(t9$sex)->t9$sex
  t.test(wage~sex,data=t9)
#+end_src

#+RESULTS: ttest2
#+begin_src org
- Error in subset(worker, sex != 3) : object 'worker' not found
- Error in factor(t9$sex) : object 't9' not found
- Error in eval(m$data, parent.frame()) : object 't9' not found
#+end_src

** Z Test for equality of proportions               :slide:



$H_{0}: p_{women} = p_{men}$

$H_{a}: p_{women} \neq p_{men}$


#+name: proptest1
#+begin_src R :results output list org
  subset(worker,sex!=3)->t9
  as.numeric(t9$gen_edu_level)->t9$gen_edu_level
  factor(t9$sex)->t9$sex
  t9[gen_edu_level>=8,.(schooled=length(fsu)),.(sex)]->a
  t9[,.(all=length(fsu)),.(sex)]->b
  prop.test(a$schooled,b$all)
#+end_src


#+CAPTION: Results of test for equality of proportions of men and women who have passed secondary school
#+RESULTS: proptest1
#+begin_src org
- 2-sample test for equality of proportions with continuity correction
- data:  a$schooled out of b$all
- X-squared = 847.73, df = 1, p-value < 0.00000000000000022
- alternative hypothesis: two.sided
- 95 percent confidence interval:
- -0.1694726 -0.1525728
- sample estimates:
- prop 1     prop 2
- 0.09245986 0.25348253
#+end_src


** F Test for equality of variances                 :slide:



$H_{0}: \sigma_{women}^{2} = \sigma_{men}^{2}$

$H_{a}: \sigma_{women}^{2} \neq \sigma_{men}^{2}$


#+name: ftest1
#+begin_src R :results output list org
  subset(worker,sex!=3)->t9
  factor(t9$sex)->t9$sex
  var.test(wage~sex,data=t9)
#+end_src

#+RESULTS: ftest1
#+begin_src org
- F test to compare two variances
- data:  wage by sex
- F = 1.8352, num df = 30652, denom df = 6975, p-value <
- 0.00000000000000022
- alternative hypothesis: true ratio of variances is not equal to 1
- 95 percent confidence interval:
- 1.768532 1.903506
- sample estimates:
- ratio of variances
- 1.835174
#+end_src
